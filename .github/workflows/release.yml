name: Releases

on:
  push:
    tags:
      - v*

permissions:
  contents: read

jobs:

  wait:
    name: Wait for tests
    runs-on: ubuntu-latest

    steps:
      - uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: Tests done
          ref: ${{ github.sha }}
          timeoutSeconds: 3600

      - name: Fail the Build
        uses: cutenode/action-always-fail@v1
        if: steps.wait-for-tests.outputs.conclusion != 'success'

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
        - "3.12"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          pip install uv

      - name: Build release distributions
        run: |
          uv pip install --system build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: [wait, build]
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/otp-mcp-server/

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

  release:
    runs-on: ubuntu-latest
    needs: [wait, build]
    permissions: write-all

    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
